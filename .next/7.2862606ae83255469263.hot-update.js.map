{"version":3,"file":"7.2862606ae83255469263.hot-update.js","sources":["webpack:///pages/view.js"],"sourcesContent":["\nimport React from 'react';\nimport { shape, bool } from 'prop-types';\n\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport Layout from '../components/Layout';\nimport Contact from '../components/Contact';\n\nimport withData from '../lib/apollo';\n\nimport { contactType } from '../propTypes/Contact';\n\nconst ContactPage = ({\n  contactQuery,\n}) => (\n  <Layout>\n    {!contactQuery.loading && <Contact\n      viewPage\n      {...contactQuery.Contact}\n    />}\n  </Layout>\n);\n\nContactPage.propTypes = {\n  contactQuery: shape({\n    isLoading: bool.isRequired,\n    Contact: shape(contactType),\n  }).isRequired,\n};\n\nconst contactQuery = gql`\n  query ContactQuery($id: ID) {\n    Contact(id: $id) {\n      id\n      firstName\n      lastName\n      phoneNumbers {\n        label\n        number\n      }\n    }\n  }\n`;\n\nexport default withData(graphql(contactQuery, {\n  name: 'contactQuery',\n  options: ({ url }) => ({\n    fetchPolicy: 'network-only',\n    variables: {\n      id: url.query.id,\n    },\n  }),\n})(ContactPage));\n\n\n\n// WEBPACK FOOTER //\n// pages/view.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAUA;AACA;AACA;AACA;AAFA;AADA;AAOA;AACA;AAaA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAAA;AAFA;AACA;AADA;;;;;;;;;;;;AAhCA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}